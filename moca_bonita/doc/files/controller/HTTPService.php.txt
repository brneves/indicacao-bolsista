<?php

require_once(Path::MBINCLUDES . "/json/JSONService.php");

/**
* Service to treat request/response requests.
*
* @author Rômulo Batista
* @category WordPress
* @package moca_bonita\controller
* @copyright Copyright (c) 2015-2016 Núcleo de Tecnologia da Informação - NTI, Universidade Estadual do Maranhão - UEMA
*/

abstract class HTTPService {
    /**
    * Query string
    * 
    * @var string
    */
    protected $qs;
    /**
    * POST, PUT or DELETE content body
    * 
    * @var array
    */
    protected $content;
    /**
    * HTTP request method
    * 
    * @var string
    */
    protected $requestMethod;
    /**
    * JSONService object
    * 
    * @var object
    */
    protected $json;

    /**
    * Class constructor
    * 
    */
    public function __construct(){
        $this->json = new JSONService();
        $this->getRequest();
    }

    /**
    * Get the request from client
    * 
    */
    public function getRequest(){
        if($this->isGET())
            $this->qs = $_GET;

        if($this->isPOST()){
            $post = file_get_contents('php://input');

            if($this->isJSON($post))
                $_POST = json_decode($post, true);

            $this->content = $_POST;
        }

        if($this->isPUT()){
            $put = file_get_contents("php://input");

            if($this->isJSON($put))
                $this->content = $this->json->decode($put);
            else
                $this->content = $put;
        }

        if($this->isDELETE()){
            $delete = file_get_contents("php://input");

            if($this->isJSON($delete))
                $this->content = $this->json->decode($delete);
            else
                $this->content = $delete;            
        }
    }

    /**
    * Set the request method
    * 
    */
    public function setRequestMethod(){
        if(isset($_REQUEST))
            $this->request = $_REQUEST;
    }

    /**
    * Check if it's a GET method
    * 
    * @return True if the method is GET, false if it's not
    */
    public function isGET(){
        if($_SERVER['REQUEST_METHOD'] === 'GET')
            return true;

        return false;
    }

    /**
    * Check if it's a POST method
    * 
    * @return True if the method is POST, false if it's not
    */
    public function isPOST(){
        if($_SERVER['REQUEST_METHOD'] === 'POST')
            return true;

        return false;
    }

    /**
    * Check if it's a PUT method
    * 
    * @return True if the method is PUT, false if it's not
    */
    public function isPUT(){
        if($_SERVER['REQUEST_METHOD'] === 'PUT')
            return true;

        return false;
    }

    /**
    * Check if it's a DELETE method
    * 
    * @return True if the method is DELETE, false if it's not
    */
    public function isDELETE(){
        if($_SERVER['REQUEST_METHOD'] === 'DELETE')
            return true;

        return false;
    }

    /**
    * Check if something was requested
    * 
    * @return True if something was requested, false if was not
    */
    public function isREQUEST(){
        if(isset($this->request))
            return true;

        return false;
    }

    /**
    * Check if the string is in JSON format
    * 
    * @param string $str A string
    * @return True if the method is GET, false if it's not
    */
    public function isJSON($str){
        return $this->json->isJSON($str);
    }

    /**
    * Send the message back to the client
    * 
    * @param array or string $msg The response message
    * @return A message in JSON or TEXT
    */
    public function sendMessage($msg){
        if(is_array($msg)){
            $response = array();

            if($this->isGET()){
                if(isset($msg['http_method'])){
                    $meta = array('meta' => array('code' => $msg['http_method']['code'],
                                                    'error_message' => $msg['http_method']['error_message']));
                    return $this->json->sendJSON($meta);
                } else {
                    $data = array('data' => $msg);
                    array_push($response, $data);
                    $meta = array('meta' => array('code' => '200'));
                    array_push($response, $meta);
                    return $this->json->sendJSON($response);
                }
            } elseif($this->isPOST()){
                if(isset($msg['http_method'])){
                    $meta = array('meta' => array('code' => $msg['http_method']['code'],
                                                    'error_message' => $msg['http_method']['error_message']));
                    return $this->json->sendJSON($meta);
                } else {
                    $data = array('data' => $msg);
                    array_push($response, $data);
                    $meta = array('meta' => array('code' => '201'));
                    array_push($response, $meta);
                    return $this->json->sendJSON($response);
                }
            } elseif($this->isPUT()){
                if(isset($msg['http_method'])){
                    $meta = array('meta' => array('code' => $msg['http_method']['code'],
                                                    'error_message' => $msg['http_method']['error_message']));
                    return $this->json->sendJSON($meta);
                } else {
                    $data = array('data' => $msg);
                    array_push($response, $data);
                    $meta = array('meta' => array('code' => '201'));
                    array_push($response, $meta);
                    return $this->json->sendJSON($response);
                }
            } elseif($this->isDELETE()){
                if(isset($msg['http_method'])){
                    $meta = array('meta' => array('code' => $msg['http_method']['code'],
                                                    'error_message' => $msg['http_method']['error_message']));
                    return $this->json->sendJSON($meta);
                } else {
                    $data = array('data' => $msg);
                    array_push($response, $data);
                    $meta = array('meta' => array('code' => '204'));
                    array_push($response, $meta);
                    return $this->json->sendJSON($response);
                }
            } else {
                return $msg;
            }
        }
    }

}

