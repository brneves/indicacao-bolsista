<?php

require_once(Path::MBINCLUDES . 'HTTPMethod.php');

/**
* Deal with what to do after requests.
*
* Every todo in admin pages has its own action. So you need to send through query string or inside content a parameter called todo that'll be associated to an action
*
* @author Rômulo Batista
* @category WordPress
* @package moca_bonita\action
* @copyright Copyright (c) 2015-2016 Núcleo de Tecnologia da Informação - NTI, Universidade Estadual do Maranhão - UEMA
*/

class TODO {
	/**
    * What to do (after request)
    * 
    * @var string
    */
	private $todo;

	/**
    * Class constructor
    * 
    */
	public function __construct(){
		$this->todo = array();
	}
	
	/**
    * Add todo
    * 
    * @param string $controller Name of the controller that will treat the request
    * @param string $todo Name of todo
    */
	public function addTODO($controller, $todo){
		foreach ($this->todo as $td) {
			if($td === $todo)
				return false;
		}

		$todoAr = array('controller' => $controller, 'todo' => $todo);
		array_push($this->todo, $todoAr);
	}

	/**
    * Remove todo
    * 
    * @param string $todo Name of todo
    */
	public function removeTODO($todo){
		foreach ($this->todo as $td) {
			if($td['todo'] === $todo)
				unset($td);
		}
	}

	/**
    * Factory of controllers
    * 
    * @param string $todo What to do
    * @return The controller object for the requested todo
    */
	public function getController($todo){
		foreach ($this->todo as $td) {
			$cntrlName = $td['todo'];

			if($cntrlName === $todo){
				$file = Path::PLGCONTROLLER . $td['controller'] . '.php';

				if(file_exists($file)){
					require_once($file);
					$object = new $td['controller']();
					return $object;
				} else
					return HTTPMethod::REQUEST_UNAVAIABLE;
			}
		}
		
		return HTTPMethod::REQUEST_UNAVAIABLE;
	}
}
